{"ast":null,"code":"var _jsxFileName = \"C:\\\\workspace\\\\InterBank\\\\InterBank_Front\\\\src\\\\pages\\\\Dashboard\\\\Statement\\\\index.tsx\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport { StatementItemContainer, StatementItemImage, StatementItemInfo, StatementContainer } from './styles';\nimport { FiDollarSign } from 'react-icons/fi';\nimport { format } from 'date-fns';\nimport { transactions } from '../../../services/resources/pix';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst StatementItem = _ref => {\n  let {\n    user,\n    value,\n    type,\n    updatedAt\n  } = _ref;\n\n  ignoreDeclarationMerge: false;\n\n  return /*#__PURE__*/_jsxDEV(StatementItemContainer, {\n    children: [/*#__PURE__*/_jsxDEV(StatementItemImage, {\n      type: type,\n      children: /*#__PURE__*/_jsxDEV(FiDollarSign, {\n        size: 24\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(StatementItemInfo, {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"primary-color\",\n        children: value.toLocaleString('pt-br', {\n          style: 'currency',\n          currency: 'BRL'\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"\",\n        children: [type === 'paid' ? `Pago a ` : `Recebido de`, \" \", /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: [user.firstName, \" \", user.lastName]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 78\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"\",\n        children: format(new Date(updatedAt), \"dd/MM/yyyy 'às' HH:mm'h'\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 9\n  }, this);\n};\n\n_c = StatementItem;\n\nconst Statement = () => {\n  _s();\n\n  const [statements, setStatements] = useState();\n\n  const getAlltransactions = async () => {\n    const {\n      data\n    } = await transactions();\n    setStatements(data.transactions);\n  };\n\n  useEffect(() => {\n    getAlltransactions();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(StatementContainer, {\n    children: statements && statements.map(statement => /*#__PURE__*/_jsxDEV(StatementItem, { ...statement\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 56\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Statement, \"geE9zx0USEe9eMawD4V7N6+SGRM=\");\n\n_c2 = Statement;\nexport default Statement;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"StatementItem\");\n$RefreshReg$(_c2, \"Statement\");","map":{"version":3,"sources":["C:/workspace/InterBank/InterBank_Front/src/pages/Dashboard/Statement/index.tsx"],"names":["useState","useEffect","StatementItemContainer","StatementItemImage","StatementItemInfo","StatementContainer","FiDollarSign","format","transactions","StatementItem","user","value","type","updatedAt","ignoreDeclarationMerge","toLocaleString","style","currency","firstName","lastName","Date","Statement","statements","setStatements","getAlltransactions","data","map","statement"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAASC,sBAAT,EAAiCC,kBAAjC,EAAqDC,iBAArD,EAAwEC,kBAAxE,QAAkG,UAAlG;AACA,SAASC,YAAT,QAA6B,gBAA7B;AACA,SAASC,MAAT,QAAuB,UAAvB;AACA,SAASC,YAAT,QAA6B,iCAA7B;;;AAaA,MAAMC,aAAa,GAAG,QAAmD;AAAA,MAAlD;AAACC,IAAAA,IAAD;AAAOC,IAAAA,KAAP;AAAcC,IAAAA,IAAd;AAAoBC,IAAAA;AAApB,GAAkD;;AACrEC,EAAAA,sBAAsB,EAAE;;AACxB,sBACI,QAAC,sBAAD;AAAA,4BACI,QAAC,kBAAD;AAAoB,MAAA,IAAI,EAAEF,IAA1B;AAAA,6BACI,QAAC,YAAD;AAAc,QAAA,IAAI,EAAE;AAApB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ,eAII,QAAC,iBAAD;AAAA,8BACI;AAAG,QAAA,SAAS,EAAC,eAAb;AAAA,kBACKD,KAAK,CAACI,cAAN,CAAqB,OAArB,EAA6B;AAACC,UAAAA,KAAK,EAAE,UAAR;AAAoBC,UAAAA,QAAQ,EAAE;AAA9B,SAA7B;AADL;AAAA;AAAA;AAAA;AAAA,cADJ,eAII;AAAG,QAAA,SAAS,EAAC,EAAb;AAAA,mBAAiBL,IAAI,KAAK,MAAT,GAAmB,SAAnB,GAA8B,aAA/C,oBAA6D;AAAA,qBAASF,IAAI,CAACQ,SAAd,OAA0BR,IAAI,CAACS,QAA/B;AAAA;AAAA;AAAA;AAAA;AAAA,gBAA7D;AAAA;AAAA;AAAA;AAAA;AAAA,cAJJ,eAKI;AAAG,QAAA,SAAS,EAAC,EAAb;AAAA,kBAAiBZ,MAAM,CAAC,IAAIa,IAAJ,CAASP,SAAT,CAAD,EAAsB,0BAAtB;AAAvB;AAAA;AAAA;AAAA;AAAA,cALJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAcH,CAhBD;;KAAMJ,a;;AAkBN,MAAMY,SAAS,GAAG,MAAM;AAAA;;AAEpB,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BvB,QAAQ,EAA5C;;AAEA,QAAMwB,kBAAkB,GAAG,YAAY;AACnC,UAAM;AAACC,MAAAA;AAAD,QAAS,MAAMjB,YAAY,EAAjC;AACAe,IAAAA,aAAa,CAACE,IAAI,CAACjB,YAAN,CAAb;AACH,GAHD;;AAKAP,EAAAA,SAAS,CAAC,MAAM;AACZuB,IAAAA,kBAAkB;AACrB,GAFQ,EAEN,EAFM,CAAT;AAIA,sBACI,QAAC,kBAAD;AAAA,cACKF,UAAU,IAAIA,UAAU,CAACI,GAAX,CAAeC,SAAS,iBAAI,QAAC,aAAD,OAAmBA;AAAnB;AAAA;AAAA;AAAA;AAAA,YAA5B;AADnB;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH,CAlBD;;GAAMN,S;;MAAAA,S;AAoBN,eAAeA,SAAf","sourcesContent":["import { useState, useEffect } from 'react';\r\nimport { StatementItemContainer, StatementItemImage, StatementItemInfo, StatementContainer } from './styles';\r\nimport { FiDollarSign } from 'react-icons/fi'\r\nimport { format } from 'date-fns';\r\nimport { transactions } from '../../../services/resources/pix';\r\n\r\ninterface StatementItem {\r\n    user: {\r\n        firstName: string,\r\n        lastName: string\r\n    },\r\n    value: number,\r\n    type: 'paid' | 'received',\r\n    updatedAt: Date,\r\n    ignoreDeclarationMerge?: boolean;\r\n}\r\n\r\nconst StatementItem = ({user, value, type, updatedAt}: StatementItem) => {\r\n    ignoreDeclarationMerge: false;\r\n    return (\r\n        <StatementItemContainer>\r\n            <StatementItemImage type={type}>\r\n                <FiDollarSign size={24}/>\r\n            </StatementItemImage>\r\n            <StatementItemInfo>\r\n                <p className=\"primary-color\">\r\n                    {value.toLocaleString('pt-br',{style: 'currency', currency: 'BRL'})}\r\n                </p>\r\n                <p className=\"\">{type === 'paid' ? `Pago a `: `Recebido de`} <strong>{user.firstName} {user.lastName}</strong></p>\r\n                <p className=\"\">{format(new Date(updatedAt), \"dd/MM/yyyy 'às' HH:mm'h'\")}</p>\r\n            </StatementItemInfo>\r\n        </StatementItemContainer>\r\n    )\r\n}\r\n\r\nconst Statement = () => {\r\n\r\n    const [statements, setStatements] = useState<StatementItem>();\r\n\r\n    const getAlltransactions = async () => {\r\n        const {data} = await transactions();\r\n        setStatements(data.transactions);\r\n    }\r\n\r\n    useEffect(() => {\r\n        getAlltransactions();\r\n    }, [])\r\n\r\n    return (\r\n        <StatementContainer>\r\n            {statements && statements.map(statement => <StatementItem {...statement}/>)}\r\n        </StatementContainer>\r\n    )\r\n}\r\n\r\nexport default Statement;"]},"metadata":{},"sourceType":"module"}